var addedPlaceEvent = document.createEvent('Event');
addedPlaceEvent.initEvent('custom/addedPlace', true, true);

const provider = new window.GeoSearch.OpenStreetMapProvider();

function addPlaceButton() {
  var event = new CustomEvent('custom/addedPlace');
  window.dispatchEvent(event);
}

function popupTemplate(source, place, interests) {
  var full_address = place.address || place.label;
  var full_address_array = full_address.split(',');
  var name = full_address_array.splice(0, 1);
  var address = full_address_array.join();
  var popup = `<div class="popup-label"><div class="name">${name}</div>`;
  popup += interests != undefined ? `<span class="interests">${interests.join(', ')}</span>` : ``;
  popup += `<div class="address">${address}</div><button id="add-place" onclick="addPlaceButton()" type=button>Add</button></div>`;
  return popup
}

function popupCallback({query, result}) {
  var event = new CustomEvent('custom/openedPopup', { detail: result });
  window.dispatchEvent(event);
  return popupTemplate('osm', result);
}

const icon_url = new L.Icon({
              iconUrl: '<%= image_path 'marker-icon.png' %>',
              retinaUrl: '<%= image_path 'marker-icon-2x.png' %>',
              shadowUrl: '<%= image_path 'marker-shadow.png' %>',
              iconSize: [25, 41],
              iconAnchor: [12, 41],
              popupAnchor: [1, -34],
              shadowSize: [41, 41]
            });

const searchControl = new window.GeoSearch.GeoSearchControl({
  provider: provider,
  showPopup: true,
  popupFormat: popupCallback,
  style: 'bar',
  maxMarkers: 5,
  marker: { icon: icon_url  },
  keepResult: true
});

var mymap = L.map('mapid', {scrollWheelZoom: false}).setView([46.453, 3.318], 6);

mymap.on('focus', function() { mymap.scrollWheelZoom.enable(); });
mymap.on('blur', function() { mymap.scrollWheelZoom.disable(); });

L.tileLayer('https://api.tiles.mapbox.com/v4/{id}/{z}/{x}/{y}.png?access_token={accessToken}', {
    attribution: 'Map data &copy; <a href="http://openstreetmap.org">OpenStreetMap</a> contributors, <a href="http://creativecommons.org/licenses/by-sa/2.0/">CC-BY-SA</a>, Imagery Â© <a href="http://mapbox.com">Mapbox</a>',
    maxZoom: 18,
    id: 'mapbox.streets',
    accessToken: 'pk.eyJ1Ijoia2lsbGlhbmtlbXBzIiwiYSI6ImNpa2Zqcmp6dzAwMW91dGttMXZwaXVlOXoifQ.sM4Mivt3C4b8lPGKzNorxQ'
}).addTo(mymap);

mymap.addControl(searchControl);

// Populate markers with already registered places
if (gon) {
  const places = gon.places;
  for (var i = 0; i < places.length; i++) {
    let place = places[i].place;
    let interests = places[i].interests;
    L.marker([place.latitude, place.longitude], { icon: icon_url  }).addTo(mymap)
      .bindPopup(popupTemplate('app', place, interests))
      .on('popupopen', function(event) { latestPlace = place });
  }
}

var latestPlace = {};
var places_form = document.getElementById('user_places_list');
var places_list = document.getElementById('added-places');
var addedPlaces = JSON.parse(places_form.value) || [];

// Register first state by taking into account app's data
registerState();

function deletePlaceButton(index) {
  addedPlaces.splice(index, 1);
  registerState();
}

function registerState() {
  places_form.value = JSON.stringify(addedPlaces);
  places_list.innerHTML = '';
  for (var i = 0; i < addedPlaces.length; i++) {
    var new_place_label = document.createElement('li');
    // Wether from OpenStreetMap directly or from the app
    var full_address = addedPlaces[i].address || addedPlaces[i].label;
    full_address_array = full_address.split(',');
    name = full_address_array.splice(0, 1);
    address = full_address_array.join();

    new_place_label.innerHTML = `<span class="name">${name}</span> ${address}<button type=button onclick="deletePlaceButton(${i})">x</button>`;
    places_list.appendChild(new_place_label);
  }
}

window.addEventListener('custom/openedPopup', function (e) {
  latestPlace = e.detail;
}, false);

window.addEventListener('custom/addedPlace', function (e) {
  addedPlaces.push(latestPlace);
  registerState();
}, false);

// Allow to add interests directly to input
var interests_items = document.querySelector('#interests-list');
var interests_input = document.querySelector('#user_interests_list');

if (interests_input) {
  interests_items.addEventListener('click', function (e) {
    interests_input.value += interests_input.value == '' ? `${e.target.textContent}` : `, ${e.target.textContent}`;
  }, false);
}
